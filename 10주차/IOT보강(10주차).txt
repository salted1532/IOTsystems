Serial (UART)

Hardware Serial
아두이노 시리얼 통신이 대표적
2개의 통신 라인이 크로스 되어 연결 (RX, TX)
비동기식 : Clock 라인 없이 양측이 미리 합의된 클럭 사용
-> 두 장치의 클럭 간격을 미리 맞춰줘야 함 (baud rate)
클럭 동기화 문제
-> 두 장치가 사용하는 클럭 생성기(crystal)의 주파수가 틀린 경우
-> 문제 방지를 위해 start/stop 비트 추가
Baudrate(통신속도 BPS), Start/Stop bit, Parity bit, Data chunk
9600 8N1 -> 9600 bps, 8bit data, No parity, 1 stop bit

RX(in) -> TX(out) 비동기화 
TX(in) -> RX(out) 크로스 되어 연결

RX -> RX TX -> TX 동기화 작동 안함

동기화

Hardware Serial (UART)

start/stop 비트로 인한 오버헤드 발생
하드웨어 구성이 복잡해짐 (UART)
Serial(UART)
아두이노의 기본 통신 방법, 1 : 1 통신
TX RX 핀을 사용
PC와의 통신에 이용
아두이노 간 시리얼 통신이 가능
블루투스 모듈, WIFI 모듈 등 광범위하게 사용
일반적으로 TX-RX, RX-TX 크로스해서 연결
아두이노의 Serial 통신 핀

아두이노의 기본 통신 방법, 1 : 1 통신
TX RX 핀을 사용
PC와의 통신에 이용

아두이노간 시리얼 통신이 가능
블루투스 모듈 WIFI모듈 등 광범위하게 사용
일반적으로 TX-RX RX-TX 크로스 해서 연결

아두이노의 Serial 통신 핀
우노 보드 계열 : D0 (RX), D1 (TX)
메가 보드 4개의 시리얼 지원
특별한 라이브러리 없이 Serial.x.
표준 스트림 클래스를 상속하므로 
사용 

우노 보드 계열 : D0 RX, D1 TX
메가 보드 : 4개의 시리얼 포트 지원
특별한 라이브러리 없이 Serial.x 사용 가능
표준 스트림 클래스를 상속하므로 다양한 통신이 용이
여러 개의 시리얼 포트를 사용하여 다양한 장치들과 동시에 통신 가능

Software Serial
Built-in 된 0, 1 번 핀 외에 다른 디지털 핀으로 Serial 통신
Software(Library)로 serial 통신을 지원
최신 아두이노 개발 환경에서 기본 내장
Hardware serial 은 소스코드 업로드, 디버깅의 목적으로 사용되는 경우가 많으므로 일반적으로 serial 모듈들은 이 방법을 사용

사용 시 주의 사항
Software Serial 버전에 따라 2개 이상의 인스턴스 지원에 문제가 있을
가능성이 있음
Timer 및 일부 라이브러리와의 충돌 가능성이 있음.
구형 라이브러리에서 인터럽트 핀을 사용해야 하는 경우도 있음
라이브러리가 RAM을 150~200 byte 정도 잡아먹음.

시리얼 통신 테스트
LED를 PC에서 시리얼 통신으로 제어


