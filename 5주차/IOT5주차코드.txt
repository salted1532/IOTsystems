#include <LiquidCrystal_I2C.h>
#include <Wire.h>

// LCD 주소가 0x27인 경우 설정 (확인 후 수정)
LiquidCrystal_I2C lcd(0x27, 16 , 2); // I2C 주소, 화면 크기(16x2)

// setup() 함수: 한번만 실행되는 초기 설정
void setup() {
  Serial.begin(9600); // 시리얼 통신 시작
  Wire.begin(); // I2C 통신 시작
  Serial.println("I2C Scanner");

  // I2C 주소 1~127까지 검색
  for (byte address = 1; address < 127; address++) {
    Wire.beginTransmission(address);
    byte error = Wire.endTransmission();
    if (error == 0) {
      // 주소가 유효한 경우 출력
      if (address < 16) {
        Serial.print("0");
      }
      Serial.println(address, HEX);
    }
  }
  // LCD 초기화
  lcd.init();
  // LCD 백라이트 켜기
  lcd.backlight();

  lcd.display();
}

// loop() 함수: 반복적으로 실행되는 부분
void loop() {
  // 랜덤 값을 0부터 2까지 생성
  int value = random(0, 3);
  Serial.println(value);
  // 랜덤 값에 따라 다른 내용을 출력
  if (value == 0) {
    lcd.setCursor(0, 0); // 첫 번째 줄, 첫 번째 칸
    Serial.println("seoil 출력");
    lcd.print(" seoil "); // "seoil" 출력
  }
  else if (value == 1) {
    lcd.setCursor(0, 1); // 두 번째 줄, 첫 번째 칸
    Serial.println("Hello World 출력");
    lcd.print(" Hello World!! "); // "Hello World!!" 출력
  }
  else if (value == 2) {
    lcd.setCursor(0, 0); // 첫 번째 줄, 첫 번째 칸
    Serial.println("첫번째줄 student name 출력");
    lcd.print(" student name "); // "student name" 출력
    lcd.setCursor(0, 1); // 두 번째 줄, 첫 번째 칸
    Serial.println("두번째줄 Hello Wolrd 출력");
    lcd.print(" Hello World!! "); // "Hello World!!" 출력
  }
  
  // 화면을 일정 시간 동안 유지
  delay(2000); // 2초 동안 출력 유지
  // LCD 내용 초기화
  lcd.clear();
}
